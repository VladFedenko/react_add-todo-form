{"version":3,"sources":["api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","findUserById","usersFromServer","find","user","todosWithUser","title","completed","userId","map","todo","App","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","sethasUserIdError","todosToView","setTodosToView","className","action","method","onSubmit","event","preventDefault","todos","newTodo","Math","max","post","trim","prevTodos","htmlFor","type","placeholder","value","onChange","target","trimStart","cn","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ffebc75.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import cn from 'classnames';\nimport React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction findUserById(id: number): User | null {\n  const foundedUser = usersFromServer.find(user => user.id === id);\n\n  return foundedUser || null;\n}\n\nexport const todosWithUser = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, sethasUserIdError] = useState(false);\n\n  const [todosToView, setTodosToView] = useState(todosWithUser);\n\n  function getNewTodoId(todos: Todo[]) {\n    const maxId = Math.max(...todos.map(post => post.id));\n\n    return maxId + 1;\n  }\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value.trimStart());\n    setHasTitleError(false);\n  };\n\n  const handleIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    sethasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    sethasUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: getNewTodoId(todosToView),\n      title: title.trim(),\n      completed: false,\n      userId,\n      user: findUserById(userId),\n    };\n\n    setTodosToView(prevTodos => [...prevTodos, newTodo]);\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title:\n          </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user-id\">\n            User:\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user-id\"\n            value={userId}\n            onChange={handleIdChange}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        {todosToView.map(todo => (\n          <article\n            data-id={todo.id}\n            className={cn(\n              'TodoInfo',\n              { 'TodoInfo--completed': todo.completed },\n            )}\n            key={todo.id}\n          >\n            <h2 className=\"TodoInfo__title\">\n              {todo.title}\n            </h2>\n\n            {todo.user && (\n              <a className=\"UserInfo\" href={`mailto:${todo.user.email}`}>\n                {todo.user.name}\n              </a>\n            )}\n          </article>\n        ))}\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}